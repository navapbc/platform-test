name: "Send system notification"
# "Send a system notification to a chat application |
# like Slack or Microsoft Teams. |
# The available notification channels are defined in the infra/project-config/ |
# Terraform module in system-notifications.tf."

on:
  workflow_call:
    inputs:
      channel:
        description: "Name of channel to use. Must be defined in /infra/project-config"
        type: string
      message:
        description: "Message to send"
        type: string

jobs:
  notify:
    name: Notify
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Get channel configuration
        id: get-channel-config
        run: |
          echo "Get channel type for channel=${{ inputs.channel }}"

          terraform -chdir="infra/project-config" init > /dev/null
          terraform -chdir="infra/project-config" apply -auto-approve > /dev/null

          channel_config="$(terraform -chdir="infra/project-config" output -json system_notifications_config | jq -r '.channels."${{ inputs.channel }}"')"

          channel_type="$(echo "${channel_config}" | jq -r ".type")"
          echo "Channel type: ${channel_type}"
          echo "channel_type=${channel_type}" >> "$GITHUB_OUTPUT"

          if [[ "${channel_type}" == "slack" ]]; then
            channel_id_secret_name="$(echo "${channel_config}" | jq -r ".channel_id_secret_name")"
            echo "Channel ID secret name: ${channel_id_secret_name}"
            echo "CHANNEL_ID_SECRET_NAME=${channel_id_secret_name}" >> "$GITHUB_OUTPUT"

            slack_token_secret_name="$(echo "${channel_config}" | jq -r ".slack_token_secret_name")"
            echo "Slack token secret name: ${slack_token_secret_name}"
            echo "SLACK_TOKEN_SECRET_NAME=${slack_token_secret_name}" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: Send Slack message
        if: ${{ steps.get-channel-type.outputs.channel_type == 'slack' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets[steps.get-channel-config.outputs.SLACK_TOKEN_SECRET_NAME] }}
          payload: |
            channel: ${{ secrets[steps.get-channel-config.outputs.CHANNEL_ID_SECRET_NAME] }}
            text: ${{ inputs.message }}
